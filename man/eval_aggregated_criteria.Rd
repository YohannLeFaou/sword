% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluation.R
\name{eval_aggregated_criteria}
\alias{eval_aggregated_criteria}
\title{Compute the prediction of a model built with \code{\link{Cox_regression}}}
\usage{
eval_aggregated_criteria(model_predictions, data, y_name, delta_name, max_time,
  method, phi, phi.args, bandwidth = NULL)
}
\arguments{
\item{object}{A list output by \code{\link{Cox_regression}}}

\item{newdata}{A data.frame which contains the same variables as the ones
used for the training}
}
\value{
A list with the following elements :
\item{predicted}{The vector of the predicted values for \code{phi}\eqn{(T')}
(with \eqn{T' = min(T, } \code{max_time}\eqn{)}) for the observations of \code{newdata}}
\item{survival}{The matrix which contains the estimated values of the survival curves at
\code{time_points}, for the observations of \code{newdata}}
\item{time_points}{The vector of the time points where the survival curves
are evaluated}
}
\description{
Given an output from \code{\link{Cox_regression}},
\code{predict_Cox_regression} allows to get its predictions for new
observations
}
\examples{

data(veteran, package = "randomForestSRC")
set.seed(17)
train_lines = sample(1:nrow(veteran), 120)
res1 = Cox_regression(y_var = "time",
                      delta_var = "status",
                      x_vars = setdiff(colnames(veteran),c("time","status")),
                      data_train = veteran[train_lines,],
                      types_weights_eval = c("KM", "Cox", "RSF", "unif"))

pred1 = predict_Cox_regression(object = res1, newdata = veteran[-train_lines,])
print(pred1$predicted)
}
\seealso{
\code{\link{Cox_regression}}
}
