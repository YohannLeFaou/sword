% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Cox_regression.R
\name{predict_Cox_regression}
\alias{predict_Cox_regression}
\title{Compute the prediction of a model built with \code{\link{Cox_regression}}}
\usage{
predict_Cox_regression(object, newdata)
}
\arguments{
\item{object}{A list output by \code{\link{Cox_regression}}}

\item{newdata}{A data.frame which contains the same variables as the ones
used for the training}
}
\value{
A list with the following elements :
\item{predicted}{The vector of the predicted values for \code{phi}\eqn{(T')}
(with \eqn{T' = min(T, } \code{max_time}\eqn{)}) for the observations of \code{newdata}}
\item{survival}{The matrix which contains the estimated values of the survival curves at
\code{time_points}, for the observations of \code{newdata}}
\item{time_points}{The vector of the time points where the survival curves
are evaluated}
}
\description{
Given a model built wtih \code{\link{Cox_regression}},
\code{predict_Cox_regression} allows to get the predictions of the model for new
observations
}
\examples{
data("transplant", package = "survival")
transplant$delta = 1 * (transplant$event == "ltx") # create binary var
# which indicate censoring/non censoring

# keep only rows with no missing value
transplant_bis = transplant[stats::complete.cases(transplant),]


# ------------------------------------------------
#   Basic call to train a model
# ------------------------------------------------

set.seed(17)
train_lines = sample(1:nrow(transplant_bis), 600)
res1 = Cox_regression(y_var = "futime",
                      delta_var = "delta",
                      x_vars = setdiff(colnames(transplant_bis),c("futime", "delta", "event")),
                      data_train = transplant_bis[train_lines,],
                      types_weights_eval = c("KM", "Cox", "RSF", "unif"))

# ------------------------------------------------
#   Predict on new data
# ------------------------------------------------

pred1 = predict_Cox_regression(object = res1,
                               newdata = transplant_bis[-train_lines,])
print(pred1$predicted[1:30])
}
\seealso{
\code{\link{Cox_regression}}
}
