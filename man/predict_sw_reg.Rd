% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sw_reg.R
\name{predict_sw_reg}
\alias{predict_sw_reg}
\title{Compute the prediction of a model built with \code{\link{sw_reg}}}
\usage{
predict_sw_reg(obj, newdata)
}
\arguments{
\item{obj}{A list output by \code{\link{sw_reg}}}

\item{newdata}{A data.frame which contains the same variables as the ones
used for the training}
}
\value{
A list with the following elements :
\item{pred}{The vector of the predicted values for \code{phi}\eqn{(T')}
(with \eqn{T' = min(T, } \code{max_time}\eqn{)}) for the observations of \code{newdata}}
\item{pred_KMloc}{The vector of the predicted values for \code{phi}\eqn{(T')}
for the observations of newdata with inner Kapaln Meier weights
(require \code{obj} to be trained with
\code{mode_w_rf = 2}).
See \code{\link{sw_reg}} for more information}
\item{surv_KMloc}{The matrix which contains the estimated values of the survival curves at
\code{time_points} with inner Kapaln Meier weights,
for the observations of \code{newdata} (require \code{mode_sw_RF = 2})}
\item{time_points}{The vector of the time points where the survival curves
are evaluated (require \code{mode_sw_RF = 2})}
}
\description{
Given a model built wtih \code{\link{sw_reg}},
\code{predict_sw_reg} allows to get the
predictions of the model for new
observations
}
\examples{

# ------------------------------------------------
#   Load "transplant" data
# ------------------------------------------------
data("transplant", package = "survival")
transplant$delta = 1 * (transplant$event == "ltx") # create binary var
# which indicate censoring/non censoring

# keep only rows with no missing value
transplant_bis = transplant[stats::complete.cases(transplant),]

# ------------------------------------------------
#   Basic call to train a model
# ------------------------------------------------

set.seed(17)
train_lines = sample(1:nrow(transplant_bis), 600)
res = sw_reg(y_var = "futime",
                                   delta_var = "delta",
                                   x_vars = setdiff(colnames(transplant_bis),
                                                    c("futime", "delta", "event")),
                                   train = transplant_bis[train_lines,],
                                   types_w_ev = c("KM", "Cox", "RSF", "unif"),
                                   mode_sw_RF = 2)

# ------------------------------------------------
#   Predict on new data
# ------------------------------------------------

pred = predict_sw_reg(obj = res,
                                            newdata = transplant_bis[-train_lines,])
}
\seealso{
\code{\link{sw_reg}}
}
